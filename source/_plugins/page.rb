require_relative "../../helpers"

module Jekyll

	class PageInfo < Generator

		#include Jekyll::HelperFilters

		def generate(site)
			@site = site # so other methods in this class (called after generate() can access the same site object

			# Locate the _pages collection
			if expect(site.collections['pages'], Jekyll::Collection)

				# Separator
				sep = ""
				expect(key?(site.data, ['siteinfo','seo','separator']), String) { |e| sep = e.strip }
				if sep.length == 0 then sep = " " else sep = " " + sep + " " end

				# ITERATE
				site.collections['pages'].docs.each { |page|

					# Is this the home page?
					page_home = page.url == '/index'

					# META TITLE
					page_title = "Page"
					if expect(key?(page.data, ['seo', 'title']), String) { |e| page_title = e }
					elsif expect(page.data['title'], String) { |e| page_title = e }
					elsif expect(key?(site.data, ['siteinfo','seo','title']), String) { |e| page_title = e }
					end
					page_meta_title = page_title
					if expect(page.data['parents'], Array)
						page.data['parents'].each { |parent|
							unless key?(site.data, ['siteinfo','seo','ignore']).include?(parent)
								page_meta_title += sep + parent.title
							end
						}
					end
					if !page_home then expect(key?(site.data, ['siteinfo','title']), String) { |e| page_meta_title += sep + e } end
					expect(present?(key?(site.data, ['siteinfo','seo','suffix'])), String) { |e| page_meta_title += sep + e }

					# META DESCRIPTION
					page_meta_description = ""
					if expect(key?(page.data, ['seo','description']), String) { |e| page_meta_description = e }
					elsif expect(key?(page.data, ['excerpt']), String) { |e| page_meta_description = e } # If defined explicitly in file
					elsif expect(key?(page.data, ['excerpt']), Jekyll::Excerpt) { |e| page_meta_description = Helpers.truncate(Helpers.strip_html(Helpers.strip_newlines(e.to_s.strip)), 150) } # Generated by Jekyll
					end
					expect(key?(site.data, ['siteinfo', 'seo', 'description']), String) { |e| page_meta_description += (page_meta_description.length == 0 ? "" : " ") + e }

					# SET PAGE DATA
					page.data['meta'] = { # Meta tags
						'title' => page_meta_title,
						'description' => page_meta_description
					}
					page.data['home'] = page_home

				}

			else
				warn "No _pages collection was found."
			end

		end
	end
end
