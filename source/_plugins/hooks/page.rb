Jekyll::Hooks.register :site, :pre_render do |site, payload|
	# Jekyll has read all source files and their data and is ready to start filling out templates
	# Interject here to loop over all these pages and, if they will fill out the 'pages' template, inject additional properties used by this template

	# SEO Separator
	sep = ""
	expect(key?(site.data, ['siteinfo','seo','separator']), String) { |e| sep = e.strip }
	if sep.length == 0 then sep = " " else sep = " " + sep + " " end

	# ITERATE
	site.collections.each { |collection| # Collections are presented as array [label, collection]

		# ITERATE
		collection[1].docs.each { |page|

			#if (page['layout'] == 'page')

				# Is this the home page?
				page_home = page.url == '/index'

				# META TITLE
				page_title = "Page"
				if expect(key?(page.data, ['seo', 'title']), String) { |e| page_title = e }
				elsif expect(page.data['title'], String) { |e| page_title = e }
				elsif expect(key?(site.data, ['siteinfo','seo','title']), String) { |e| page_title = e }
				end
				page_meta_title = page_title
				if expect(page.data['parents'], Array)
					page.data['parents'].each { |parent|
						unless key?(site.data, ['siteinfo','seo','ignore']).include?(parent)
							page_meta_title += sep + parent.title
						end
					}
				end
				if !page_home then expect(key?(site.data, ['siteinfo','title']), String) { |e| page_meta_title += sep + e } end
				expect(present?(key?(site.data, ['siteinfo','seo','suffix'])), String) { |e| page_meta_title += sep + e }

				# META DESCRIPTION
				page_meta_description = ""
				if expect(key?(page.data, ['seo','description']), String) { |e| page_meta_description = e }
				elsif expect(key?(page.data, ['excerpt']), String) { |e| page_meta_description = e } # If defined explicitly in YAML
				elsif expect(key?(page.data, ['excerpt']), Jekyll::Excerpt) { |e| # Generated by Jekyll (but we switch this off - below code is in case we ever decide to switch it back on!)
					# e.to_s has already been parsed for Markdown into HTML
					# Use Nokogiri to convert entities back into Unicode and strip away the HTML
					# The layout expects Unicode, so will escape what it needs to
					page_meta_description = Jekyll::Helpers.truncate(Jekyll::Helpers.strip_newlines(Nokogiri::HTML::DocumentFragment.parse(e.to_s).text.strip), 150)
				}
				end
				expect(key?(site.data, ['siteinfo', 'seo', 'description']), String) { |e| page_meta_description += (page_meta_description.length == 0 ? "" : " ") + e }

				# SET PAGE DATA
				page.data['meta'] = { # Meta tags
					'title' => page_meta_title,
					'description' => page_meta_description
				}
				page.data['home'] = page_home

			#end

		}

	}

end
